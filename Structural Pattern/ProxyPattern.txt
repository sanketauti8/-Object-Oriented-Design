/*
Consider a scenario where your application needs to load and display images, and you want to optimize the image loading process. Loading images from disk or other external sources can be resource-intensive, especially if the images are large or stored remotely.*/

// create a subject interface which will derive proxy and real subject

interface Image{
    void display();
}
// Create real subject;
class RealImage implements Image{
    String filename;
    
    public RealImage(String filename){
        this.filename = filename;
        loadImage();
    }
    public void loadImage(){
        System.out.println("Loading image : "+ filename);
    }
    @Override
    public void display(){
        System.out.println(filename);
    }
}
//create proxy which will access real subject
class Proxy implements Image{
    Image realImage;
    String filename;
    public Proxy(String filename){
        this.filename = filename;
    }
    
    @Override
    public void display(){
        if(realImage == null){
            realImage = new RealImage(filename);
        }
        realImage.display();
    }
}

class Main {
    public static void main(String[] args) {
       // create proxy object and access real subject through proxy
       
       Proxy proxy = new Proxy("File 1");
       proxy.display();
       proxy.display();
    }
}